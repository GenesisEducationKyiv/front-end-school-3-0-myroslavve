// @generated by protoc-gen-es v2.5.2 with parameter "target=ts,import_extension=none"
// @generated from file tracks.proto (package music.tracks.v1, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv2";
import { enumDesc, fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv2";
import { file_google_protobuf_timestamp } from "@bufbuild/protobuf/wkt";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file tracks.proto.
 */
export const file_tracks: GenFile = /*@__PURE__*/
  fileDesc("Cgx0cmFja3MucHJvdG8SD211c2ljLnRyYWNrcy52MSLoAQoFVHJhY2sSCgoCaWQYASABKAkSDQoFdGl0bGUYAiABKAkSDgoGYXJ0aXN0GAMgASgJEhIKBWFsYnVtGAQgASgJSACIAQESDgoGZ2VucmVzGAUgAygJEgwKBHNsdWcYBiABKAkSGAoLY292ZXJfaW1hZ2UYByABKAlIAYgBARIXCgphdWRpb19maWxlGAggASgJSAKIAQESEgoKY3JlYXRlZF9hdBgJIAEoCRISCgp1cGRhdGVkX2F0GAogASgJQggKBl9hbGJ1bUIOCgxfY292ZXJfaW1hZ2VCDQoLX2F1ZGlvX2ZpbGUilwIKC1F1ZXJ5UGFyYW1zEhEKBHBhZ2UYASABKAVIAIgBARISCgVsaW1pdBgCIAEoBUgBiAEBEi0KBHNvcnQYAyABKA4yGi5tdXNpYy50cmFja3MudjEuU29ydEZpZWxkSAKIAQESLgoFb3JkZXIYBCABKA4yGi5tdXNpYy50cmFja3MudjEuU29ydE9yZGVySAOIAQESEwoGc2VhcmNoGAUgASgJSASIAQESEgoFZ2VucmUYBiABKAlIBYgBARITCgZhcnRpc3QYByABKAlIBogBAUIHCgVfcGFnZUIICgZfbGltaXRCBwoFX3NvcnRCCAoGX29yZGVyQgkKB19zZWFyY2hCCAoGX2dlbnJlQgkKB19hcnRpc3QiUQoOUGFnaW5hdGlvbk1ldGESDQoFdG90YWwYASABKAUSDAoEcGFnZRgCIAEoBRINCgVsaW1pdBgDIAEoBRITCgt0b3RhbF9wYWdlcxgEIAEoBSJGChBHZXRUcmFja3NSZXF1ZXN0EjIKDHF1ZXJ5X3BhcmFtcxgBIAEoCzIcLm11c2ljLnRyYWNrcy52MS5RdWVyeVBhcmFtcyJoChFHZXRUcmFja3NSZXNwb25zZRIkCgRkYXRhGAEgAygLMhYubXVzaWMudHJhY2tzLnYxLlRyYWNrEi0KBG1ldGEYAiABKAsyHy5tdXNpYy50cmFja3MudjEuUGFnaW5hdGlvbk1ldGEiHwoPR2V0VHJhY2tSZXF1ZXN0EgwKBHNsdWcYASABKAkiOQoQR2V0VHJhY2tSZXNwb25zZRIlCgV0cmFjaxgBIAEoCzIWLm11c2ljLnRyYWNrcy52MS5UcmFjayKLAQoSQ3JlYXRlVHJhY2tSZXF1ZXN0Eg0KBXRpdGxlGAEgASgJEg4KBmFydGlzdBgCIAEoCRISCgVhbGJ1bRgDIAEoCUgAiAEBEg4KBmdlbnJlcxgEIAMoCRIYCgtjb3Zlcl9pbWFnZRgFIAEoCUgBiAEBQggKBl9hbGJ1bUIOCgxfY292ZXJfaW1hZ2UiPAoTQ3JlYXRlVHJhY2tSZXNwb25zZRIlCgV0cmFjaxgBIAEoCzIWLm11c2ljLnRyYWNrcy52MS5UcmFjayLeAQoSVXBkYXRlVHJhY2tSZXF1ZXN0EgoKAmlkGAEgASgJEhIKBXRpdGxlGAIgASgJSACIAQESEwoGYXJ0aXN0GAMgASgJSAGIAQESEgoFYWxidW0YBCABKAlIAogBARIOCgZnZW5yZXMYBSADKAkSGAoLY292ZXJfaW1hZ2UYBiABKAlIA4gBARIXCgphdWRpb19maWxlGAcgASgJSASIAQFCCAoGX3RpdGxlQgkKB19hcnRpc3RCCAoGX2FsYnVtQg4KDF9jb3Zlcl9pbWFnZUINCgtfYXVkaW9fZmlsZSI8ChNVcGRhdGVUcmFja1Jlc3BvbnNlEiUKBXRyYWNrGAEgASgLMhYubXVzaWMudHJhY2tzLnYxLlRyYWNrIiAKEkRlbGV0ZVRyYWNrUmVxdWVzdBIKCgJpZBgBIAEoCSI3ChNEZWxldGVUcmFja1Jlc3BvbnNlEg8KB3N1Y2Nlc3MYASABKAgSDwoHbWVzc2FnZRgCIAEoCSIiChNEZWxldGVUcmFja3NSZXF1ZXN0EgsKA2lkcxgBIAMoCSI3ChREZWxldGVUcmFja3NSZXNwb25zZRIPCgdzdWNjZXNzGAEgAygJEg4KBmZhaWxlZBgCIAMoCSJiChJVcGxvYWRUcmFja1JlcXVlc3QSEAoIdHJhY2tfaWQYASABKAkSEQoJZmlsZV9uYW1lGAIgASgJEhQKDGNvbnRlbnRfdHlwZRgDIAEoCRIRCglmaWxlX2RhdGEYBCABKAwiTgoTVXBsb2FkVHJhY2tSZXNwb25zZRIlCgV0cmFjaxgBIAEoCzIWLm11c2ljLnRyYWNrcy52MS5UcmFjaxIQCghmaWxlX3VybBgCIAEoCSIkChZEZWxldGVUcmFja0ZpbGVSZXF1ZXN0EgoKAmlkGAEgASgJIjsKF0RlbGV0ZVRyYWNrRmlsZVJlc3BvbnNlEg8KB3N1Y2Nlc3MYASABKAgSDwoHbWVzc2FnZRgCIAEoCSqFAQoJU29ydEZpZWxkEhoKFlNPUlRfRklFTERfVU5TUEVDSUZJRUQQABIUChBTT1JUX0ZJRUxEX1RJVExFEAESFQoRU09SVF9GSUVMRF9BUlRJU1QQAhIUChBTT1JUX0ZJRUxEX0FMQlVNEAMSGQoVU09SVF9GSUVMRF9DUkVBVEVEX0FUEAQqUAoJU29ydE9yZGVyEhoKFlNPUlRfT1JERVJfVU5TUEVDSUZJRUQQABISCg5TT1JUX09SREVSX0FTQxABEhMKD1NPUlRfT1JERVJfREVTQxACMt8FCg1UcmFja3NTZXJ2aWNlElIKCUdldFRyYWNrcxIhLm11c2ljLnRyYWNrcy52MS5HZXRUcmFja3NSZXF1ZXN0GiIubXVzaWMudHJhY2tzLnYxLkdldFRyYWNrc1Jlc3BvbnNlEk8KCEdldFRyYWNrEiAubXVzaWMudHJhY2tzLnYxLkdldFRyYWNrUmVxdWVzdBohLm11c2ljLnRyYWNrcy52MS5HZXRUcmFja1Jlc3BvbnNlElgKC0NyZWF0ZVRyYWNrEiMubXVzaWMudHJhY2tzLnYxLkNyZWF0ZVRyYWNrUmVxdWVzdBokLm11c2ljLnRyYWNrcy52MS5DcmVhdGVUcmFja1Jlc3BvbnNlElgKC1VwZGF0ZVRyYWNrEiMubXVzaWMudHJhY2tzLnYxLlVwZGF0ZVRyYWNrUmVxdWVzdBokLm11c2ljLnRyYWNrcy52MS5VcGRhdGVUcmFja1Jlc3BvbnNlElgKC0RlbGV0ZVRyYWNrEiMubXVzaWMudHJhY2tzLnYxLkRlbGV0ZVRyYWNrUmVxdWVzdBokLm11c2ljLnRyYWNrcy52MS5EZWxldGVUcmFja1Jlc3BvbnNlElsKDERlbGV0ZVRyYWNrcxIkLm11c2ljLnRyYWNrcy52MS5EZWxldGVUcmFja3NSZXF1ZXN0GiUubXVzaWMudHJhY2tzLnYxLkRlbGV0ZVRyYWNrc1Jlc3BvbnNlElgKC1VwbG9hZFRyYWNrEiMubXVzaWMudHJhY2tzLnYxLlVwbG9hZFRyYWNrUmVxdWVzdBokLm11c2ljLnRyYWNrcy52MS5VcGxvYWRUcmFja1Jlc3BvbnNlEmQKD0RlbGV0ZVRyYWNrRmlsZRInLm11c2ljLnRyYWNrcy52MS5EZWxldGVUcmFja0ZpbGVSZXF1ZXN0GigubXVzaWMudHJhY2tzLnYxLkRlbGV0ZVRyYWNrRmlsZVJlc3BvbnNlYgZwcm90bzM", [file_google_protobuf_timestamp]);

/**
 * @generated from message music.tracks.v1.Track
 */
export type Track = Message<"music.tracks.v1.Track"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: string title = 2;
   */
  title: string;

  /**
   * @generated from field: string artist = 3;
   */
  artist: string;

  /**
   * @generated from field: optional string album = 4;
   */
  album?: string;

  /**
   * @generated from field: repeated string genres = 5;
   */
  genres: string[];

  /**
   * @generated from field: string slug = 6;
   */
  slug: string;

  /**
   * @generated from field: optional string cover_image = 7;
   */
  coverImage?: string;

  /**
   * @generated from field: optional string audio_file = 8;
   */
  audioFile?: string;

  /**
   * @generated from field: string created_at = 9;
   */
  createdAt: string;

  /**
   * @generated from field: string updated_at = 10;
   */
  updatedAt: string;
};

/**
 * Describes the message music.tracks.v1.Track.
 * Use `create(TrackSchema)` to create a new message.
 */
export const TrackSchema: GenMessage<Track> = /*@__PURE__*/
  messageDesc(file_tracks, 0);

/**
 * @generated from message music.tracks.v1.QueryParams
 */
export type QueryParams = Message<"music.tracks.v1.QueryParams"> & {
  /**
   * @generated from field: optional int32 page = 1;
   */
  page?: number;

  /**
   * @generated from field: optional int32 limit = 2;
   */
  limit?: number;

  /**
   * @generated from field: optional music.tracks.v1.SortField sort = 3;
   */
  sort?: SortField;

  /**
   * @generated from field: optional music.tracks.v1.SortOrder order = 4;
   */
  order?: SortOrder;

  /**
   * @generated from field: optional string search = 5;
   */
  search?: string;

  /**
   * @generated from field: optional string genre = 6;
   */
  genre?: string;

  /**
   * @generated from field: optional string artist = 7;
   */
  artist?: string;
};

/**
 * Describes the message music.tracks.v1.QueryParams.
 * Use `create(QueryParamsSchema)` to create a new message.
 */
export const QueryParamsSchema: GenMessage<QueryParams> = /*@__PURE__*/
  messageDesc(file_tracks, 1);

/**
 * @generated from message music.tracks.v1.PaginationMeta
 */
export type PaginationMeta = Message<"music.tracks.v1.PaginationMeta"> & {
  /**
   * @generated from field: int32 total = 1;
   */
  total: number;

  /**
   * @generated from field: int32 page = 2;
   */
  page: number;

  /**
   * @generated from field: int32 limit = 3;
   */
  limit: number;

  /**
   * @generated from field: int32 total_pages = 4;
   */
  totalPages: number;
};

/**
 * Describes the message music.tracks.v1.PaginationMeta.
 * Use `create(PaginationMetaSchema)` to create a new message.
 */
export const PaginationMetaSchema: GenMessage<PaginationMeta> = /*@__PURE__*/
  messageDesc(file_tracks, 2);

/**
 * @generated from message music.tracks.v1.GetTracksRequest
 */
export type GetTracksRequest = Message<"music.tracks.v1.GetTracksRequest"> & {
  /**
   * @generated from field: music.tracks.v1.QueryParams query_params = 1;
   */
  queryParams?: QueryParams;
};

/**
 * Describes the message music.tracks.v1.GetTracksRequest.
 * Use `create(GetTracksRequestSchema)` to create a new message.
 */
export const GetTracksRequestSchema: GenMessage<GetTracksRequest> = /*@__PURE__*/
  messageDesc(file_tracks, 3);

/**
 * @generated from message music.tracks.v1.GetTracksResponse
 */
export type GetTracksResponse = Message<"music.tracks.v1.GetTracksResponse"> & {
  /**
   * @generated from field: repeated music.tracks.v1.Track data = 1;
   */
  data: Track[];

  /**
   * @generated from field: music.tracks.v1.PaginationMeta meta = 2;
   */
  meta?: PaginationMeta;
};

/**
 * Describes the message music.tracks.v1.GetTracksResponse.
 * Use `create(GetTracksResponseSchema)` to create a new message.
 */
export const GetTracksResponseSchema: GenMessage<GetTracksResponse> = /*@__PURE__*/
  messageDesc(file_tracks, 4);

/**
 * @generated from message music.tracks.v1.GetTrackRequest
 */
export type GetTrackRequest = Message<"music.tracks.v1.GetTrackRequest"> & {
  /**
   * @generated from field: string slug = 1;
   */
  slug: string;
};

/**
 * Describes the message music.tracks.v1.GetTrackRequest.
 * Use `create(GetTrackRequestSchema)` to create a new message.
 */
export const GetTrackRequestSchema: GenMessage<GetTrackRequest> = /*@__PURE__*/
  messageDesc(file_tracks, 5);

/**
 * @generated from message music.tracks.v1.GetTrackResponse
 */
export type GetTrackResponse = Message<"music.tracks.v1.GetTrackResponse"> & {
  /**
   * @generated from field: music.tracks.v1.Track track = 1;
   */
  track?: Track;
};

/**
 * Describes the message music.tracks.v1.GetTrackResponse.
 * Use `create(GetTrackResponseSchema)` to create a new message.
 */
export const GetTrackResponseSchema: GenMessage<GetTrackResponse> = /*@__PURE__*/
  messageDesc(file_tracks, 6);

/**
 * @generated from message music.tracks.v1.CreateTrackRequest
 */
export type CreateTrackRequest = Message<"music.tracks.v1.CreateTrackRequest"> & {
  /**
   * @generated from field: string title = 1;
   */
  title: string;

  /**
   * @generated from field: string artist = 2;
   */
  artist: string;

  /**
   * @generated from field: optional string album = 3;
   */
  album?: string;

  /**
   * @generated from field: repeated string genres = 4;
   */
  genres: string[];

  /**
   * @generated from field: optional string cover_image = 5;
   */
  coverImage?: string;
};

/**
 * Describes the message music.tracks.v1.CreateTrackRequest.
 * Use `create(CreateTrackRequestSchema)` to create a new message.
 */
export const CreateTrackRequestSchema: GenMessage<CreateTrackRequest> = /*@__PURE__*/
  messageDesc(file_tracks, 7);

/**
 * @generated from message music.tracks.v1.CreateTrackResponse
 */
export type CreateTrackResponse = Message<"music.tracks.v1.CreateTrackResponse"> & {
  /**
   * @generated from field: music.tracks.v1.Track track = 1;
   */
  track?: Track;
};

/**
 * Describes the message music.tracks.v1.CreateTrackResponse.
 * Use `create(CreateTrackResponseSchema)` to create a new message.
 */
export const CreateTrackResponseSchema: GenMessage<CreateTrackResponse> = /*@__PURE__*/
  messageDesc(file_tracks, 8);

/**
 * @generated from message music.tracks.v1.UpdateTrackRequest
 */
export type UpdateTrackRequest = Message<"music.tracks.v1.UpdateTrackRequest"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: optional string title = 2;
   */
  title?: string;

  /**
   * @generated from field: optional string artist = 3;
   */
  artist?: string;

  /**
   * @generated from field: optional string album = 4;
   */
  album?: string;

  /**
   * @generated from field: repeated string genres = 5;
   */
  genres: string[];

  /**
   * @generated from field: optional string cover_image = 6;
   */
  coverImage?: string;

  /**
   * @generated from field: optional string audio_file = 7;
   */
  audioFile?: string;
};

/**
 * Describes the message music.tracks.v1.UpdateTrackRequest.
 * Use `create(UpdateTrackRequestSchema)` to create a new message.
 */
export const UpdateTrackRequestSchema: GenMessage<UpdateTrackRequest> = /*@__PURE__*/
  messageDesc(file_tracks, 9);

/**
 * @generated from message music.tracks.v1.UpdateTrackResponse
 */
export type UpdateTrackResponse = Message<"music.tracks.v1.UpdateTrackResponse"> & {
  /**
   * @generated from field: music.tracks.v1.Track track = 1;
   */
  track?: Track;
};

/**
 * Describes the message music.tracks.v1.UpdateTrackResponse.
 * Use `create(UpdateTrackResponseSchema)` to create a new message.
 */
export const UpdateTrackResponseSchema: GenMessage<UpdateTrackResponse> = /*@__PURE__*/
  messageDesc(file_tracks, 10);

/**
 * @generated from message music.tracks.v1.DeleteTrackRequest
 */
export type DeleteTrackRequest = Message<"music.tracks.v1.DeleteTrackRequest"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;
};

/**
 * Describes the message music.tracks.v1.DeleteTrackRequest.
 * Use `create(DeleteTrackRequestSchema)` to create a new message.
 */
export const DeleteTrackRequestSchema: GenMessage<DeleteTrackRequest> = /*@__PURE__*/
  messageDesc(file_tracks, 11);

/**
 * @generated from message music.tracks.v1.DeleteTrackResponse
 */
export type DeleteTrackResponse = Message<"music.tracks.v1.DeleteTrackResponse"> & {
  /**
   * @generated from field: bool success = 1;
   */
  success: boolean;

  /**
   * @generated from field: string message = 2;
   */
  message: string;
};

/**
 * Describes the message music.tracks.v1.DeleteTrackResponse.
 * Use `create(DeleteTrackResponseSchema)` to create a new message.
 */
export const DeleteTrackResponseSchema: GenMessage<DeleteTrackResponse> = /*@__PURE__*/
  messageDesc(file_tracks, 12);

/**
 * @generated from message music.tracks.v1.DeleteTracksRequest
 */
export type DeleteTracksRequest = Message<"music.tracks.v1.DeleteTracksRequest"> & {
  /**
   * @generated from field: repeated string ids = 1;
   */
  ids: string[];
};

/**
 * Describes the message music.tracks.v1.DeleteTracksRequest.
 * Use `create(DeleteTracksRequestSchema)` to create a new message.
 */
export const DeleteTracksRequestSchema: GenMessage<DeleteTracksRequest> = /*@__PURE__*/
  messageDesc(file_tracks, 13);

/**
 * @generated from message music.tracks.v1.DeleteTracksResponse
 */
export type DeleteTracksResponse = Message<"music.tracks.v1.DeleteTracksResponse"> & {
  /**
   * @generated from field: repeated string success = 1;
   */
  success: string[];

  /**
   * @generated from field: repeated string failed = 2;
   */
  failed: string[];
};

/**
 * Describes the message music.tracks.v1.DeleteTracksResponse.
 * Use `create(DeleteTracksResponseSchema)` to create a new message.
 */
export const DeleteTracksResponseSchema: GenMessage<DeleteTracksResponse> = /*@__PURE__*/
  messageDesc(file_tracks, 14);

/**
 * Simplified upload request for web compatibility
 *
 * @generated from message music.tracks.v1.UploadTrackRequest
 */
export type UploadTrackRequest = Message<"music.tracks.v1.UploadTrackRequest"> & {
  /**
   * @generated from field: string track_id = 1;
   */
  trackId: string;

  /**
   * @generated from field: string file_name = 2;
   */
  fileName: string;

  /**
   * @generated from field: string content_type = 3;
   */
  contentType: string;

  /**
   * @generated from field: bytes file_data = 4;
   */
  fileData: Uint8Array;
};

/**
 * Describes the message music.tracks.v1.UploadTrackRequest.
 * Use `create(UploadTrackRequestSchema)` to create a new message.
 */
export const UploadTrackRequestSchema: GenMessage<UploadTrackRequest> = /*@__PURE__*/
  messageDesc(file_tracks, 15);

/**
 * @generated from message music.tracks.v1.UploadTrackResponse
 */
export type UploadTrackResponse = Message<"music.tracks.v1.UploadTrackResponse"> & {
  /**
   * @generated from field: music.tracks.v1.Track track = 1;
   */
  track?: Track;

  /**
   * @generated from field: string file_url = 2;
   */
  fileUrl: string;
};

/**
 * Describes the message music.tracks.v1.UploadTrackResponse.
 * Use `create(UploadTrackResponseSchema)` to create a new message.
 */
export const UploadTrackResponseSchema: GenMessage<UploadTrackResponse> = /*@__PURE__*/
  messageDesc(file_tracks, 16);

/**
 * @generated from message music.tracks.v1.DeleteTrackFileRequest
 */
export type DeleteTrackFileRequest = Message<"music.tracks.v1.DeleteTrackFileRequest"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;
};

/**
 * Describes the message music.tracks.v1.DeleteTrackFileRequest.
 * Use `create(DeleteTrackFileRequestSchema)` to create a new message.
 */
export const DeleteTrackFileRequestSchema: GenMessage<DeleteTrackFileRequest> = /*@__PURE__*/
  messageDesc(file_tracks, 17);

/**
 * @generated from message music.tracks.v1.DeleteTrackFileResponse
 */
export type DeleteTrackFileResponse = Message<"music.tracks.v1.DeleteTrackFileResponse"> & {
  /**
   * @generated from field: bool success = 1;
   */
  success: boolean;

  /**
   * @generated from field: string message = 2;
   */
  message: string;
};

/**
 * Describes the message music.tracks.v1.DeleteTrackFileResponse.
 * Use `create(DeleteTrackFileResponseSchema)` to create a new message.
 */
export const DeleteTrackFileResponseSchema: GenMessage<DeleteTrackFileResponse> = /*@__PURE__*/
  messageDesc(file_tracks, 18);

/**
 * @generated from enum music.tracks.v1.SortField
 */
export enum SortField {
  /**
   * @generated from enum value: SORT_FIELD_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: SORT_FIELD_TITLE = 1;
   */
  TITLE = 1,

  /**
   * @generated from enum value: SORT_FIELD_ARTIST = 2;
   */
  ARTIST = 2,

  /**
   * @generated from enum value: SORT_FIELD_ALBUM = 3;
   */
  ALBUM = 3,

  /**
   * @generated from enum value: SORT_FIELD_CREATED_AT = 4;
   */
  CREATED_AT = 4,
}

/**
 * Describes the enum music.tracks.v1.SortField.
 */
export const SortFieldSchema: GenEnum<SortField> = /*@__PURE__*/
  enumDesc(file_tracks, 0);

/**
 * @generated from enum music.tracks.v1.SortOrder
 */
export enum SortOrder {
  /**
   * @generated from enum value: SORT_ORDER_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: SORT_ORDER_ASC = 1;
   */
  ASC = 1,

  /**
   * @generated from enum value: SORT_ORDER_DESC = 2;
   */
  DESC = 2,
}

/**
 * Describes the enum music.tracks.v1.SortOrder.
 */
export const SortOrderSchema: GenEnum<SortOrder> = /*@__PURE__*/
  enumDesc(file_tracks, 1);

/**
 * @generated from service music.tracks.v1.TracksService
 */
export const TracksService: GenService<{
  /**
   * @generated from rpc music.tracks.v1.TracksService.GetTracks
   */
  getTracks: {
    methodKind: "unary";
    input: typeof GetTracksRequestSchema;
    output: typeof GetTracksResponseSchema;
  },
  /**
   * @generated from rpc music.tracks.v1.TracksService.GetTrack
   */
  getTrack: {
    methodKind: "unary";
    input: typeof GetTrackRequestSchema;
    output: typeof GetTrackResponseSchema;
  },
  /**
   * @generated from rpc music.tracks.v1.TracksService.CreateTrack
   */
  createTrack: {
    methodKind: "unary";
    input: typeof CreateTrackRequestSchema;
    output: typeof CreateTrackResponseSchema;
  },
  /**
   * @generated from rpc music.tracks.v1.TracksService.UpdateTrack
   */
  updateTrack: {
    methodKind: "unary";
    input: typeof UpdateTrackRequestSchema;
    output: typeof UpdateTrackResponseSchema;
  },
  /**
   * @generated from rpc music.tracks.v1.TracksService.DeleteTrack
   */
  deleteTrack: {
    methodKind: "unary";
    input: typeof DeleteTrackRequestSchema;
    output: typeof DeleteTrackResponseSchema;
  },
  /**
   * @generated from rpc music.tracks.v1.TracksService.DeleteTracks
   */
  deleteTracks: {
    methodKind: "unary";
    input: typeof DeleteTracksRequestSchema;
    output: typeof DeleteTracksResponseSchema;
  },
  /**
   * @generated from rpc music.tracks.v1.TracksService.UploadTrack
   */
  uploadTrack: {
    methodKind: "unary";
    input: typeof UploadTrackRequestSchema;
    output: typeof UploadTrackResponseSchema;
  },
  /**
   * @generated from rpc music.tracks.v1.TracksService.DeleteTrackFile
   */
  deleteTrackFile: {
    methodKind: "unary";
    input: typeof DeleteTrackFileRequestSchema;
    output: typeof DeleteTrackFileResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_tracks, 0);

